{
	// Place your MGL_SERVER workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"getAllOf choice": {
		"prefix": "getAllOf()",
		"body": [
		  "getAllOf('${1|getAllPlatforms,getAllDeveloper,getAllGenreNamesAndImage,getAllPublishers,getAllTagNames|}'"
		],
		"description": "Insert a choice for getAllOf"
	},
	"getmMduleByName choice": {
		"prefix": "getmMduleByName()",
		"body": [
		  "getmMduleByName('${1|getGenreByName,getDeveloperByName,getPlatformsByName,getTagByName,getPublishersByName|}', '${2:{name:name}}'"
		],
		"description": "Insert a choice for getmMduleByName"
	},
	"CheckModuleValidation choice": {
		"prefix": "CheckModuleValidation()",
		"body": [
		  "CheckModuleValidation('${1|getGenreByName,getDeveloperByName,getPlatformsByName,getTagByName,getPublishersByName|}',"
		],
		"description": "Insert a choice for CheckModuleValidation"
	},
	"arrayCheckModuleValidation choice": {
		"prefix": "arrayCheckModuleValidation()",
		"body": [
		  "arrayCheckModuleValidation('${1|getGenreByName,getDeveloperByName,getPlatformsByName,getTagByName,getPublishersByName|}',"
		],
		"description": "Insert a choice for CheckModuleValidation"
	},
	"theValidValues": {
		"prefix": "theValidValues()",
		"body": [
			"theValidValues('${1|getAllPlatforms,getAllDeveloper,getAllGenreNamesAndImage,getAllPublishers,getAllTagNames|}'"
		  ],
		"description": "theValidValues function with URL"
	  },

	// "theValidValue": {
	// 	"prefix": "theValidValue",
	// 	"body": [
	// 	  "theValidValue('${1|getAllPlatforms,getAllGenreNamesAndImage,getAllDeveloper,getAllPublishers,getAllTagNames|}', '${2|PlatformsName,GenreName,DeveloperName,publishersName,TagName|}')"
	// 	],
	// 	"description": "theValidValue function with URL and Parameter"
	//   }
}